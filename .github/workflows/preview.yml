---
name: preview

on:
  pull_request:
    branches:
      - master

jobs:
  deploy:
    if: github.event.pull_request.type != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build --production

      - name: Deploy Cloudflare Worker
        uses: mathiasvr/command-output@v2.0.0
        with:
          run: |
            npm run deploy -- --verbose --literal GITHUB_APPLY:true --secret GITHUB_TOKEN:GH_TOKEN
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_ACCOUNT_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          WRANGLER_SEND_METRICS: false
        id: deploy

      - name: Test deployed Cloudflare worker
        run: |
          curl  -sD- --retry 10 --retry-delay 0 --retry-max-time 120 --retry-all-errors ${{ steps.deploy.outputs.stdout }}

      - name: Destroy
        uses: mathiasvr/command-output@v2.0.0
        with:
          run: |
            echo npm run destroy -- --verbose
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_ACCOUNT_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          WRANGLER_SEND_METRICS: false
        id: destroy

      - name: Test destroyed Cloudflare worker
        run: >
          retries=10;
          while [ $retries -gt 0 ]; do
              retries=$((retries - 1));
              return_header=$(curl -sD- https://www.google.com | head -1);
              return_code=$(echo "$return_headers" | awk '{print $2}');
              if [[ "$return_code" == "404" ]]; then
                  exit 0;
              fi
          done
          exit 1;

      - name: Deploy Cloudflare Worker
        uses: mathiasvr/command-output@v2.0.0
        with:
          run: |
            npm run deploy -- --verbose --literal GITHUB_APPLY:true --secret GITHUB_TOKEN:GH_TOKEN
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_ACCOUNT_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          WRANGLER_SEND_METRICS: false
        id: redeploy

      - name: Test deployed Cloudflare worker
        run: |
          curl  -sD- --retry 10 --retry-delay 0 --retry-max-time 120 --retry-all-errors ${{ steps.redeploy.outputs.stdout }}
